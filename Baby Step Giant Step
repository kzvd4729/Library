/************ Baby Step Giant Step ************/
long BsGs(long a,long b,long m)
{
  int n=sqrt(m+1);long an=1;
  for(int i=0;i<n;i++)an=(an*a)%m;
  map<int,int>mp;//unoedered is good choice
  long cur=an;
  for(int i=1;i<=n;i++)
  {
    if(!mp.count(cur))
      mp[cur]=i;
    cur=(cur*an)%m;
  }
  cur=b;
  for(int i=0;i<=n;i++)
  {
    if(mp.count(cur))
    {
      long ans=mp[cur]*n-i;
      if(ans<m)return ans;
      //modify for largest/smallest solution
    }
    cur=(cur*a)%m;
  }
  return -1;//no solution
}
//Finds such k that a^k(mod m)=b;
//a and m have to be relatively prime
////////////////////////////////////////////////////
